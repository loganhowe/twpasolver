Search.setIndex({"docnames": ["api-reference/modules", "api-reference/twpasolver", "api-reference/twpasolver.models", "index", "installation"], "filenames": ["api-reference/modules.rst", "api-reference/twpasolver.rst", "api-reference/twpasolver.models.rst", "index.rst", "installation.rst"], "titles": ["twpasolver", "twpasolver package", "twpasolver.models package", "Welcome to twpasolver\u2019s documentation!", "Installation"], "terms": {"packag": [0, 3], "subpackag": 0, "model": [0, 1], "import": [0, 1], "usag": [0, 1], "submodul": 0, "compos": [0, 1], "modul": [0, 3], "modelarrai": [0, 1], "oneport": [0, 1], "rf_function": [0, 1], "transmission_lin": [0, 1], "twoportarrai": [0, 1], "twpa_cel": [0, 1], "analysi": [0, 2, 4], "analyz": [0, 1, 2], "data_fil": [0, 1], "run": [0, 1], "data": [0, 1], "model_post_init": [0, 1], "update_base_data": [0, 1], "save_data": [0, 1], "load_data": [0, 1], "execut": [0, 1], "parameter_sweep": [0, 1], "executionrequest": [0, 1], "name": [0, 1, 2], "arg": [0, 1, 2], "kwarg": [0, 1, 2], "twpanalysi": [0, 1], "twpa": [0, 1, 2], "load_model_from_fil": [0, 1], "phase_match": [0, 1], "gain": [0, 1], "bandwidth": [0, 1], "plot_respons": [0, 1], "plot_gain": [0, 1], "plot_phase_match": [0, 1], "analysis_funct": [0, 1], "basemodel": 0, "model_dump": [0, 1], "from_fil": [0, 1], "dump_to_fil": [0, 1], "file_util": 0, "npencod": [0, 1], "default": [0, 1, 2], "add_extens": [0, 1], "ensure_directory_exist": [0, 1], "read_fil": [0, 1], "read_hdf5": [0, 1], "read_json": [0, 1], "save_to_fil": [0, 1], "save_to_hdf5": [0, 1], "save_to_json": [0, 1], "frequenc": [0, 2], "f_list": [0, 1], "f_arang": [0, 1], "unit": [0, 1, 2], "f": [0, 1], "omega": [0, 1], "unit_multipli": [0, 1], "log": 0, "customhandl": [0, 1], "format": [0, 1], "mathutil": 0, "cmeode_complet": [0, 1], "i_to_dbm": [0, 1], "a2": [0, 1], "cme_solv": [0, 1], "compute_phase_match": [0, 1], "dbm_to_i": [0, 1], "matmul_2x2": [0, 1], "matpow_2x2": [0, 1], "s2a": [0, 1], "to_db": [0, 1], "matrices_arrai": 0, "abcdarrai": [0, 1, 2], "A": [0, 1], "b": [0, 1], "c": [0, 1, 2], "d": [0, 1], "smatrixarrai": [0, 1], "s11": [0, 1], "s12": [0, 1], "s21": [0, 1], "s22": [0, 1], "twobytwoarrai": [0, 1], "len": [0, 1], "shape": [0, 1], "abcd_ident": [0, 1], "plot": 0, "twoport": [0, 2], "twoportcel": [0, 1], "z0": [0, 1, 2], "as_dict": [0, 1], "freq": [0, 1, 2], "from_": [0, 1], "interpol": [0, 1], "": [0, 1], "to_network": [0, 1], "twoportmodel": [0, 1, 2], "z0_ref": [0, 1, 2], "n": [0, 1, 2], "updat": [0, 1], "single_abcd": [0, 1, 2], "get_abcd": [0, 1], "get_cel": [0, 1], "get_network": [0, 1], "type": [0, 2], "all_subclass": [0, 1], "validate_imped": [0, 1], "cell": [1, 2], "validate_nested_cel": [1, 2], "append": [1, 2], "capacit": [1, 2], "z": [1, 2], "induct": [1, 2], "l": [1, 2], "oneportarrai": [1, 2], "parallel": [1, 2], "oneportmodel": [1, 2], "twoport_parallel": [1, 2], "y": [1, 2], "resist": [1, 2], "r": [1, 2], "stub": [1, 2], "length": [1, 2], "open": [1, 2], "lclf_abcd": [1, 2], "get_stub_cel": [1, 2], "lossless_line_abcd": [1, 2], "parallel_admittance_abcd": [1, 2], "series_impedance_abcd": [1, 2], "losslesstl": [1, 2], "from_z_vp": [1, 2], "vp": [1, 2], "istar": [1, 2], "idc": [1, 2], "ip0": [1, 2], "epsilon": [1, 2], "xi": [1, 2], "chi": [1, 2], "alpha": [1, 2], "iratio": [1, 2], "n_tot": [1, 2], "lclfbasecel": [1, 2], "lf": [1, 2], "center": [1, 2], "stubbasecel": [1, 2], "l1": [1, 2], "l2": [1, 2], "line": [1, 2], "class": [1, 2], "pydant": [1, 2], "sourc": [1, 2], "base": [1, 2], "abc": [1, 2], "structur": 1, "show": [1, 2], "json": [1, 2], "schema": [1, 2], "titl": [1, 2], "descript": [1, 2], "object": [1, 2], "properti": [1, 2], "file": 1, "string": [1, 2], "item": [1, 2], "ref": [1, 2], "def": [1, 2], "arrai": [1, 2], "gener": [1, 2], "stuctur": 1, "function": [1, 2], "request": 1, "requir": [1, 2], "field": [1, 2], "dict": 1, "str": 1, "ani": [1, 2], "list": [1, 2], "option": [1, 2], "_analyzer__context": 1, "none": [1, 2], "i": [1, 2], "empti": 1, "abstract": [1, 2], "check": 1, "necessari": 1, "writer": 1, "hdf5": 1, "save": 1, "filenam": 1, "load": 1, "from": [1, 2], "target": 1, "valu": [1, 2], "an": [1, 2], "multipl": [1, 2], "time": 1, "differ": [1, 2], "paramet": [1, 2], "argument": [1, 2], "chang": 1, "sweep": 1, "return": [1, 2], "dictionari": 1, "contain": [1, 2], "The": [1, 2], "all": [1, 2], "organ": [1, 2], "addit": [1, 2], "dimens": 1, "runner": 1, "standard": 1, "routin": 1, "3wm": 1, "anyof": 1, "minimum": [1, 2], "0": [1, 2], "number": [1, 2], "null": 1, "maxitem": 1, "3": 1, "minitem": 1, "prefixitem": 1, "tupl": 1, "pass": [1, 2], "numpi": 1, "arang": 1, "construct": [1, 2], "span": 1, "ghz": 1, "enum": [1, 2], "hz": 1, "khz": 1, "mhz": 1, "thz": 1, "capacitor": [1, 2], "50": [1, 2], "refer": [1, 2], "imped": [1, 2], "two": [1, 2], "port": [1, 2], "compon": [1, 2], "1": [1, 2], "repetit": [1, 2], "comput": [1, 2], "abcd": [1, 2], "matrix": [1, 2], "integ": [1, 2], "fals": [1, 2], "insert": [1, 2], "when": [1, 2], "transform": [1, 2], "represent": [1, 2], "boolean": [1, 2], "const": [1, 2], "inductor": [1, 2], "lc": [1, 2], "straight": [1, 2], "finger": [1, 2], "lossless": [1, 2], "transmiss": [1, 2], "characterist": [1, 2], "direct": [1, 2], "composit": [1, 2], "repres": [1, 2], "basic": [1, 2], "nest": [1, 2], "ar": [1, 2], "allow": [1, 2], "discrimin": [1, 2], "map": [1, 2], "propertynam": [1, 2], "oneof": [1, 2], "connect": [1, 2], "intern": [1, 2], "resistor": [1, 2], "true": [1, 2], "filter": [1, 2], "distribut": [1, 2], "element": [1, 2], "instead": [1, 2], "lump": [1, 2], "simpl": [1, 2], "0065": [1, 2], "nonlinear": [1, 2], "scale": [1, 2], "current": [1, 2], "001": [1, 2], "bia": [1, 2], "dc": [1, 2], "0002": [1, 2], "rf": [1, 2], "pump": [1, 2], "amplitud": [1, 2], "valid": [1, 2], "try": 1, "provid": [1, 2], "extract": 1, "thi": [1, 2], "trigger": 1, "everi": 1, "after": 1, "thin": 1, "int": [1, 2], "20": 1, "build": [1, 2], "phase": [1, 2], "match": [1, 2], "profil": 1, "condit": [1, 2], "consid": 1, "signal": 1, "lower": 1, "than": 1, "first": [1, 2], "stopband": 1, "end": 1, "step": 1, "size": 1, "out": 1, "wavenumb": 1, "delta": 1, "triplet": 1, "satisfi": 1, "k": 1, "pump_freq": 1, "signal_freq": 1, "ndarrai": [1, 2], "dtype": [1, 2], "float64": [1, 2], "float": [1, 2], "is0": 1, "1e": [1, 2], "06": 1, "100": 1, "expect": 1, "float_arrai": [1, 2], "If": [1, 2], "us": [1, 2, 4], "optim": 1, "initi": [1, 2], "posit": 1, "otherwis": [1, 2], "calcul": [1, 2], "x": 1, "along": 1, "i_triplet": 1, "idler": 1, "each": 1, "gain_db": 1, "final": 1, "db": 1, "gain_reduct": 1, "gain_kwarg": 1, "inform": 1, "about": 1, "compund": 1, "maximum": 1, "threshold": 1, "determin": 1, "edg": 1, "bandwidth_edg": 1, "section": [1, 2], "abov": 1, "total_bw": 1, "total": [1, 2], "max_gain": 1, "observ": 1, "reduced_gain": 1, "level": 1, "mean_gain": 1, "mean": 1, "across": 1, "rang": 1, "bw_freq": 1, "where": 1, "ax": 1, "respons": [1, 2], "context": 1, "we": 1, "need": 1, "both": 1, "privat": 1, "attribut": 1, "call": 1, "user": [1, 2], "defin": [1, 2], "method": 1, "func": 1, "wrap": 1, "automat": 1, "result": [1, 2], "must": 1, "compat": 1, "wrapper": 1, "custom": 1, "overload": 1, "overridden": 1, "extend": 1, "exclud": 1, "serial": 1, "add": 1, "dump": 1, "nthi": 1, "nand": 1, "exclude_non": 1, "bool": [1, 2], "mode": [1, 4], "overrid": 1, "whether": 1, "keyword": [1, 2], "classmethod": [1, 2], "instanc": [1, 2], "path": 1, "which": [1, 2], "read": 1, "write": 1, "It": [1, 2], "includ": [1, 2], "util": [1, 2], "ensur": 1, "extens": 1, "directori": 1, "correctli": 1, "handl": 1, "well": [1, 2], "recurs": [1, 2], "work": 1, "skipkei": 1, "ensure_ascii": 1, "check_circular": 1, "allow_nan": 1, "sort_kei": 1, "indent": 1, "separ": 1, "jsonencod": 1, "encod": 1, "o": 1, "specifi": 1, "alreadi": 1, "present": 1, "given": [1, 2], "exist": 1, "creat": [1, 2], "savenam": 1, "definit": 1, "variabl": 1, "measur": 1, "can": [1, 2], "either": 1, "liter": [1, 2], "annot": 1, "ge": [1, 2], "angular": 1, "get": [1, 2], "multipli": 1, "chosen": 1, "correspond": 1, "meant": 1, "behav": 1, "like": [1, 2], "initialis": 1, "take": 1, "sinc": 1, "what": 1, "core": 1, "self": 1, "logger": 1, "configur": [1, 2], "streamhandl": 1, "handler": 1, "algorithm": 1, "credit": 1, "qiboc": 1, "record": 1, "specif": [1, 2], "mathemat": 1, "express": 1, "equat": 1, "t": 1, "complex128": [1, 2], "kp": 1, "ki": 1, "epsi": 1, "complet": 1, "coupl": 1, "ip": 1, "2": 1, "ii": 1, "a5a": 1, "a5b": 1, "a5c": 1, "prx": 1, "quantum": 1, "010302": 1, "2021": 1, "http": [1, 4], "doi": 1, "org": 1, "10": 1, "1103": 1, "prxquantum": 1, "curr": 1, "convert": 1, "dbm": 1, "ohm": 1, "power": 1, "complex": [1, 2], "matric": [1, 2], "complex_arrai": [1, 2], "2x2": 1, "k_signal": 1, "k_idler": 1, "x_arrai": 1, "y0": 1, "k_pump": 1, "cme": 1, "solver": 1, "k_signal_arrai": 1, "k_pump_arrai": 1, "matrices_a": 1, "matrices_b": 1, "fast": 1, "between": [1, 2], "expon": 1, "exponenti": 1, "rais": 1, "spar": 1, "mat": 1, "n_abcd": 1, "ident": 1, "collect": [1, 2], "freqs_unit": 1, "plot_kwarg": 1, "np": [1, 2], "delta_pm": 1, "log_ab": 1, "mismatch": 1, "factor": 1, "logarithm": 1, "absolut": 1, "s21_db": 1, "k_star": 1, "figsiz": 1, "5": 1, "6": 1, "figur": 1, "network": [1, 2], "manipul": [1, 2], "radio": [1, 2], "depend": 1, "perform": 1, "common": 1, "oper": [1, 2], "electron": 1, "design": 1, "support": [1, 2], "task": 1, "simul": [1, 2], "exampl": [1, 2], "1e9": [1, 2], "2e9": 1, "3e9": 1, "4": 1, "7": 1, "8": 1, "9": 1, "11": 1, "12": [1, 2], "s_param": 1, "new": [1, 2], "new_freq": 1, "5e9": 1, "interpolated_cel": 1, "cell_data": 1, "loaded_cel": 1, "content": 1, "s_mat": 1, "instanti": 1, "polar": 1, "magnitud": 1, "real": 1, "imaginari": 1, "part": 1, "scikit": 1, "constraint": [1, 2], "__module__": 1, "__get_pydantic_core_schema__": 1, "bound": 1, "_impedance2pydanticannot": 1, "__get_pydantic_json_schema__": 1, "__dict__": 1, "0x7f34315ee5f0": 1, "0x7f34315ee680": 1, "__weakref__": 1, "__doc__": 1, "0x7f34315ee4d0": 1, "nonnegativeint": [1, 2], "singl": 1, "iter": 1, "cl": 1, "subclass": 1, "find": 1, "input": 1, "variou": 2, "one": 2, "more": 2, "travel": 2, "wave": 2, "parametr": 2, "amplifi": 2, "One": 2, "anymodel": 2, "These": 2, "studi": 2, "behavior": 2, "under": 2, "simpler": 2, "seri": 2, "linspac": 2, "1e6": 2, "1000": 2, "abcd_param": 2, "directli": 2, "same": 2, "circuit": 2, "indic": 2, "should": 2, "appli": 2, "onli": 2, "possibl": 2, "constructor": 2, "insid": 2, "potenti": 2, "other": 2, "describ": 2, "nonnegativefloat": 2, "allof": 2, "anyoneportmodel": 2, "entir": 2, "1d": 2, "admitt": 2, "compil": 2, "lclf": 2, "second": 2, "per": 2, "short": 2, "propag": 2, "constant": 2, "veloc": 2, "portion": 2, "evalu": 2, "also": [2, 4], "special": 2, "applic": 2, "coeffici": 2, "order": 2, "term": 2, "relat": 2, "correct": 2, "ratio": 2, "combin": 2, "instal": 3, "index": 3, "search": 3, "page": 3, "clone": 4, "repositori": 4, "git": 4, "github": 4, "com": 4, "twpalab": 4, "twpasolv": 4, "normal": 4, "pip": 4, "poetri": 4, "latest": 4, "version": 4, "develop": 4, "rememb": 4, "pre": 4, "commit": 4, "doc": 4}, "objects": {"": [[1, 0, 0, "-", "twpasolver"]], "twpasolver": [[1, 0, 0, "-", "analysis"], [1, 0, 0, "-", "basemodel"], [1, 0, 0, "-", "file_utils"], [1, 0, 0, "-", "frequency"], [1, 0, 0, "-", "logging"], [1, 0, 0, "-", "mathutils"], [1, 0, 0, "-", "matrices_arrays"], [2, 0, 0, "-", "models"], [1, 0, 0, "-", "plotting"], [1, 0, 0, "-", "twoport"], [1, 0, 0, "-", "typing"]], "twpasolver.analysis": [[1, 1, 1, "", "Analyzer"], [1, 1, 1, "", "ExecutionRequest"], [1, 1, 1, "", "TWPAnalysis"], [1, 5, 1, "", "analysis_function"]], "twpasolver.analysis.Analyzer": [[1, 2, 1, "", "data"], [1, 2, 1, "", "data_file"], [1, 3, 1, "", "execute"], [1, 3, 1, "", "load_data"], [1, 3, 1, "", "model_post_init"], [1, 3, 1, "", "parameter_sweep"], [1, 2, 1, "", "run"], [1, 3, 1, "", "save_data"], [1, 3, 1, "", "update_base_data"]], "twpasolver.analysis.ExecutionRequest": [[1, 2, 1, "", "args"], [1, 2, 1, "", "kwargs"], [1, 2, 1, "", "name"]], "twpasolver.analysis.TWPAnalysis": [[1, 3, 1, "", "bandwidth"], [1, 3, 1, "", "gain"], [1, 4, 1, "", "load_model_from_file"], [1, 3, 1, "", "model_post_init"], [1, 3, 1, "", "phase_matching"], [1, 3, 1, "", "plot_gain"], [1, 3, 1, "", "plot_phase_matching"], [1, 3, 1, "", "plot_response"], [1, 2, 1, "", "twpa"], [1, 3, 1, "", "update_base_data"]], "twpasolver.basemodel": [[1, 1, 1, "", "BaseModel"]], "twpasolver.basemodel.BaseModel": [[1, 3, 1, "", "dump_to_file"], [1, 3, 1, "", "from_file"], [1, 3, 1, "", "model_dump"]], "twpasolver.file_utils": [[1, 6, 1, "", "NpEncoder"], [1, 5, 1, "", "add_extension"], [1, 5, 1, "", "ensure_directory_exists"], [1, 5, 1, "", "read_file"], [1, 5, 1, "", "read_hdf5"], [1, 5, 1, "", "read_json"], [1, 5, 1, "", "save_to_file"], [1, 5, 1, "", "save_to_hdf5"], [1, 5, 1, "", "save_to_json"]], "twpasolver.file_utils.NpEncoder": [[1, 3, 1, "", "default"]], "twpasolver.frequency": [[1, 1, 1, "", "Frequencies"]], "twpasolver.frequency.Frequencies": [[1, 7, 1, "", "f"], [1, 2, 1, "", "f_arange"], [1, 2, 1, "", "f_list"], [1, 3, 1, "", "model_post_init"], [1, 7, 1, "", "omega"], [1, 2, 1, "", "unit"], [1, 7, 1, "", "unit_multiplier"]], "twpasolver.logging": [[1, 6, 1, "", "CustomHandler"]], "twpasolver.logging.CustomHandler": [[1, 3, 1, "", "format"]], "twpasolver.mathutils": [[1, 5, 1, "", "CMEode_complete"], [1, 5, 1, "", "I_to_dBm"], [1, 5, 1, "", "a2s"], [1, 5, 1, "", "cme_solve"], [1, 5, 1, "", "compute_phase_matching"], [1, 5, 1, "", "dBm_to_I"], [1, 5, 1, "", "matmul_2x2"], [1, 5, 1, "", "matpow_2x2"], [1, 5, 1, "", "s2a"], [1, 5, 1, "", "to_dB"]], "twpasolver.matrices_arrays": [[1, 6, 1, "", "ABCDArray"], [1, 6, 1, "", "SMatrixArray"], [1, 6, 1, "", "TwoByTwoArray"], [1, 5, 1, "", "abcd_identity"]], "twpasolver.matrices_arrays.ABCDArray": [[1, 7, 1, "", "A"], [1, 7, 1, "", "B"], [1, 7, 1, "", "C"], [1, 7, 1, "", "D"]], "twpasolver.matrices_arrays.SMatrixArray": [[1, 7, 1, "", "S11"], [1, 7, 1, "", "S12"], [1, 7, 1, "", "S21"], [1, 7, 1, "", "S22"]], "twpasolver.matrices_arrays.TwoByTwoArray": [[1, 7, 1, "", "len"], [1, 7, 1, "", "shape"]], "twpasolver.models": [[2, 0, 0, "-", "compose"], [2, 0, 0, "-", "modelarray"], [2, 0, 0, "-", "oneport"], [2, 0, 0, "-", "rf_functions"], [2, 0, 0, "-", "transmission_lines"], [2, 0, 0, "-", "twoportarrays"], [2, 0, 0, "-", "twpa_cells"]], "twpasolver.models.compose": [[2, 5, 1, "", "compose"]], "twpasolver.models.modelarray": [[2, 1, 1, "", "ModelArray"]], "twpasolver.models.modelarray.ModelArray": [[2, 3, 1, "", "append"], [2, 2, 1, "", "cells"], [2, 4, 1, "", "validate_nested_cells"]], "twpasolver.models.oneport": [[2, 1, 1, "", "Capacitance"], [2, 1, 1, "", "Inductance"], [2, 1, 1, "", "OnePortArray"], [2, 1, 1, "", "OnePortModel"], [2, 1, 1, "", "Resistance"], [2, 1, 1, "", "Stub"]], "twpasolver.models.oneport.Capacitance": [[2, 2, 1, "", "C"], [2, 3, 1, "", "Z"], [2, 2, 1, "", "name"]], "twpasolver.models.oneport.Inductance": [[2, 2, 1, "", "L"], [2, 3, 1, "", "Z"], [2, 2, 1, "", "name"]], "twpasolver.models.oneport.OnePortArray": [[2, 3, 1, "", "Z"], [2, 2, 1, "", "cells"], [2, 2, 1, "", "name"], [2, 2, 1, "", "parallel"]], "twpasolver.models.oneport.OnePortModel": [[2, 3, 1, "", "Y"], [2, 3, 1, "", "Z"], [2, 3, 1, "", "single_abcd"], [2, 2, 1, "", "twoport_parallel"]], "twpasolver.models.oneport.Resistance": [[2, 2, 1, "", "R"], [2, 3, 1, "", "Z"], [2, 2, 1, "", "name"]], "twpasolver.models.oneport.Stub": [[2, 2, 1, "", "C"], [2, 2, 1, "", "L"], [2, 3, 1, "", "Z"], [2, 2, 1, "", "length"], [2, 2, 1, "", "name"], [2, 2, 1, "", "open"]], "twpasolver.models.rf_functions": [[2, 5, 1, "", "LCLf_abcd"], [2, 5, 1, "", "capacitance"], [2, 5, 1, "", "get_stub_cell"], [2, 5, 1, "", "inductance"], [2, 5, 1, "", "lossless_line_abcd"], [2, 5, 1, "", "parallel_admittance_abcd"], [2, 5, 1, "", "series_impedance_abcd"], [2, 5, 1, "", "stub"]], "twpasolver.models.transmission_lines": [[2, 1, 1, "", "LosslessTL"]], "twpasolver.models.transmission_lines.LosslessTL": [[2, 2, 1, "", "C"], [2, 2, 1, "", "L"], [2, 7, 1, "", "Z0"], [2, 3, 1, "", "from_z_vp"], [2, 2, 1, "", "l"], [2, 2, 1, "", "name"], [2, 3, 1, "", "single_abcd"], [2, 7, 1, "", "vp"]], "twpasolver.models.twoportarrays": [[2, 1, 1, "", "TWPA"], [2, 1, 1, "", "TwoPortArray"]], "twpasolver.models.twoportarrays.TWPA": [[2, 2, 1, "", "Idc"], [2, 2, 1, "", "Ip0"], [2, 7, 1, "", "Iratio"], [2, 2, 1, "", "Istar"], [2, 7, 1, "", "N_tot"], [2, 7, 1, "", "alpha"], [2, 7, 1, "", "chi"], [2, 7, 1, "", "epsilon"], [2, 2, 1, "", "name"], [2, 7, 1, "", "xi"]], "twpasolver.models.twoportarrays.TwoPortArray": [[2, 2, 1, "", "cells"], [2, 2, 1, "", "name"], [2, 3, 1, "", "single_abcd"]], "twpasolver.models.twpa_cells": [[2, 1, 1, "", "LCLfBaseCell"], [2, 1, 1, "", "StubBaseCell"]], "twpasolver.models.twpa_cells.LCLfBaseCell": [[2, 2, 1, "", "C"], [2, 2, 1, "", "L"], [2, 2, 1, "", "Lf"], [2, 2, 1, "", "centered"], [2, 2, 1, "", "name"], [2, 3, 1, "", "single_abcd"]], "twpasolver.models.twpa_cells.StubBaseCell": [[2, 2, 1, "", "C"], [2, 2, 1, "", "L"], [2, 2, 1, "", "Lf"], [2, 2, 1, "", "l1"], [2, 2, 1, "", "l2"], [2, 2, 1, "", "line"], [2, 2, 1, "", "name"], [2, 3, 1, "", "single_abcd"]], "twpasolver.plotting": [[1, 5, 1, "", "plot_gain"], [1, 5, 1, "", "plot_phase_matching"], [1, 5, 1, "", "plot_response"]], "twpasolver.twoport": [[1, 6, 1, "", "TwoPortCell"], [1, 1, 1, "", "TwoPortModel"]], "twpasolver.twoport.TwoPortCell": [[1, 7, 1, "", "Z0"], [1, 3, 1, "", "as_dict"], [1, 3, 1, "", "dump_to_file"], [1, 7, 1, "", "freqs"], [1, 3, 1, "", "from_file"], [1, 3, 1, "", "from_s"], [1, 3, 1, "", "interpolate"], [1, 7, 1, "", "s"], [1, 3, 1, "", "to_network"]], "twpasolver.twoport.TwoPortModel": [[1, 2, 1, "", "N"], [1, 2, 1, "", "Z0_ref"], [1, 3, 1, "", "get_abcd"], [1, 3, 1, "", "get_cell"], [1, 3, 1, "", "get_network"], [1, 3, 1, "", "single_abcd"], [1, 3, 1, "", "update"]], "twpasolver.typing": [[1, 5, 1, "", "all_subclasses"], [1, 5, 1, "", "validate_impedance"]]}, "objtypes": {"0": "py:module", "1": "py:pydantic_model", "2": "py:pydantic_field", "3": "py:method", "4": "py:pydantic_validator", "5": "py:function", "6": "py:class", "7": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "pydantic_model", "Python model"], "2": ["py", "pydantic_field", "Python field"], "3": ["py", "method", "Python method"], "4": ["py", "pydantic_validator", "Python validator"], "5": ["py", "function", "Python function"], "6": ["py", "class", "Python class"], "7": ["py", "property", "Python property"]}, "titleterms": {"twpasolv": [0, 1, 2, 3], "packag": [1, 2], "subpackag": 1, "submodul": [1, 2], "analysi": 1, "modul": [1, 2], "basemodel": 1, "file_util": 1, "frequenc": 1, "log": 1, "mathutil": 1, "matrices_arrai": 1, "plot": 1, "twoport": 1, "type": 1, "model": 2, "import": 2, "usag": 2, "compos": 2, "modelarrai": 2, "oneport": 2, "rf_function": 2, "transmission_lin": 2, "twoportarrai": 2, "twpa_cel": 2, "welcom": 3, "": 3, "document": 3, "content": 3, "api": 3, "refer": 3, "indic": 3, "tabl": 3, "instal": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"twpasolver": [[0, "twpasolver"]], "twpasolver package": [[1, "module-twpasolver"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"]], "twpasolver.analysis module": [[1, "module-twpasolver.analysis"]], "twpasolver.basemodel module": [[1, "module-twpasolver.basemodel"]], "twpasolver.file_utils module": [[1, "module-twpasolver.file_utils"]], "twpasolver.frequency module": [[1, "module-twpasolver.frequency"]], "twpasolver.logging module": [[1, "module-twpasolver.logging"]], "twpasolver.mathutils module": [[1, "module-twpasolver.mathutils"]], "twpasolver.matrices_arrays module": [[1, "module-twpasolver.matrices_arrays"]], "twpasolver.plotting module": [[1, "module-twpasolver.plotting"]], "twpasolver.twoport module": [[1, "module-twpasolver.twoport"]], "twpasolver.typing module": [[1, "module-twpasolver.typing"]], "twpasolver.models package": [[2, "module-twpasolver.models"]], "Imports": [[2, "imports"]], "Usage": [[2, "usage"]], "twpasolver.models.compose module": [[2, "module-twpasolver.models.compose"]], "twpasolver.models.modelarray module": [[2, "module-twpasolver.models.modelarray"]], "twpasolver.models.oneport module": [[2, "module-twpasolver.models.oneport"]], "twpasolver.models.rf_functions module": [[2, "module-twpasolver.models.rf_functions"]], "twpasolver.models.transmission_lines module": [[2, "module-twpasolver.models.transmission_lines"]], "twpasolver.models.twoportarrays module": [[2, "module-twpasolver.models.twoportarrays"]], "twpasolver.models.twpa_cells module": [[2, "module-twpasolver.models.twpa_cells"]], "Welcome to twpasolver\u2019s documentation!": [[3, "welcome-to-twpasolver-s-documentation"]], "Contents:": [[3, null]], "Api reference": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, "installation"]]}, "indexentries": {"a (twpasolver.matrices_arrays.abcdarray property)": [[1, "twpasolver.matrices_arrays.ABCDArray.A"]], "abcdarray (class in twpasolver.matrices_arrays)": [[1, "twpasolver.matrices_arrays.ABCDArray"]], "b (twpasolver.matrices_arrays.abcdarray property)": [[1, "twpasolver.matrices_arrays.ABCDArray.B"]], "c (twpasolver.matrices_arrays.abcdarray property)": [[1, "twpasolver.matrices_arrays.ABCDArray.C"]], "cmeode_complete() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.CMEode_complete"]], "customhandler (class in twpasolver.logging)": [[1, "twpasolver.logging.CustomHandler"]], "d (twpasolver.matrices_arrays.abcdarray property)": [[1, "twpasolver.matrices_arrays.ABCDArray.D"]], "i_to_dbm() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.I_to_dBm"]], "n (twpasolver.twoport.twoportmodel attribute)": [[1, "twpasolver.twoport.TwoPortModel.N"]], "npencoder (class in twpasolver.file_utils)": [[1, "twpasolver.file_utils.NpEncoder"]], "s11 (twpasolver.matrices_arrays.smatrixarray property)": [[1, "twpasolver.matrices_arrays.SMatrixArray.S11"]], "s12 (twpasolver.matrices_arrays.smatrixarray property)": [[1, "twpasolver.matrices_arrays.SMatrixArray.S12"]], "s21 (twpasolver.matrices_arrays.smatrixarray property)": [[1, "twpasolver.matrices_arrays.SMatrixArray.S21"]], "s22 (twpasolver.matrices_arrays.smatrixarray property)": [[1, "twpasolver.matrices_arrays.SMatrixArray.S22"]], "smatrixarray (class in twpasolver.matrices_arrays)": [[1, "twpasolver.matrices_arrays.SMatrixArray"]], "twobytwoarray (class in twpasolver.matrices_arrays)": [[1, "twpasolver.matrices_arrays.TwoByTwoArray"]], "twoportcell (class in twpasolver.twoport)": [[1, "twpasolver.twoport.TwoPortCell"]], "z0 (twpasolver.twoport.twoportcell property)": [[1, "twpasolver.twoport.TwoPortCell.Z0"]], "z0_ref (twpasolver.twoport.twoportmodel attribute)": [[1, "twpasolver.twoport.TwoPortModel.Z0_ref"]], "a2s() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.a2s"]], "abcd_identity() (in module twpasolver.matrices_arrays)": [[1, "twpasolver.matrices_arrays.abcd_identity"]], "add_extension() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.add_extension"]], "all_subclasses() (in module twpasolver.typing)": [[1, "twpasolver.typing.all_subclasses"]], "analysis_function() (in module twpasolver.analysis)": [[1, "twpasolver.analysis.analysis_function"]], "args (twpasolver.analysis.executionrequest attribute)": [[1, "twpasolver.analysis.ExecutionRequest.args"]], "as_dict() (twpasolver.twoport.twoportcell method)": [[1, "twpasolver.twoport.TwoPortCell.as_dict"]], "bandwidth() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.bandwidth"]], "cme_solve() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.cme_solve"]], "compute_phase_matching() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.compute_phase_matching"]], "dbm_to_i() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.dBm_to_I"]], "data (twpasolver.analysis.analyzer attribute)": [[1, "twpasolver.analysis.Analyzer.data"]], "data_file (twpasolver.analysis.analyzer attribute)": [[1, "twpasolver.analysis.Analyzer.data_file"]], "default() (twpasolver.file_utils.npencoder method)": [[1, "twpasolver.file_utils.NpEncoder.default"]], "dump_to_file() (twpasolver.basemodel.basemodel method)": [[1, "twpasolver.basemodel.BaseModel.dump_to_file"]], "dump_to_file() (twpasolver.twoport.twoportcell method)": [[1, "twpasolver.twoport.TwoPortCell.dump_to_file"]], "ensure_directory_exists() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.ensure_directory_exists"]], "execute() (twpasolver.analysis.analyzer method)": [[1, "twpasolver.analysis.Analyzer.execute"]], "f (twpasolver.frequency.frequencies property)": [[1, "twpasolver.frequency.Frequencies.f"]], "f_arange (twpasolver.frequency.frequencies attribute)": [[1, "twpasolver.frequency.Frequencies.f_arange"]], "f_list (twpasolver.frequency.frequencies attribute)": [[1, "twpasolver.frequency.Frequencies.f_list"]], "format() (twpasolver.logging.customhandler method)": [[1, "twpasolver.logging.CustomHandler.format"]], "freqs (twpasolver.twoport.twoportcell property)": [[1, "twpasolver.twoport.TwoPortCell.freqs"]], "from_file() (twpasolver.basemodel.basemodel class method)": [[1, "twpasolver.basemodel.BaseModel.from_file"]], "from_file() (twpasolver.twoport.twoportcell class method)": [[1, "twpasolver.twoport.TwoPortCell.from_file"]], "from_s() (twpasolver.twoport.twoportcell class method)": [[1, "twpasolver.twoport.TwoPortCell.from_s"]], "gain() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.gain"]], "get_abcd() (twpasolver.twoport.twoportmodel method)": [[1, "twpasolver.twoport.TwoPortModel.get_abcd"]], "get_cell() (twpasolver.twoport.twoportmodel method)": [[1, "twpasolver.twoport.TwoPortModel.get_cell"]], "get_network() (twpasolver.twoport.twoportmodel method)": [[1, "twpasolver.twoport.TwoPortModel.get_network"]], "interpolate() (twpasolver.twoport.twoportcell method)": [[1, "twpasolver.twoport.TwoPortCell.interpolate"]], "kwargs (twpasolver.analysis.executionrequest attribute)": [[1, "twpasolver.analysis.ExecutionRequest.kwargs"]], "len (twpasolver.matrices_arrays.twobytwoarray property)": [[1, "twpasolver.matrices_arrays.TwoByTwoArray.len"]], "load_data() (twpasolver.analysis.analyzer method)": [[1, "twpasolver.analysis.Analyzer.load_data"]], "load_model_from_file() (twpasolver.analysis.twpanalysis class method)": [[1, "twpasolver.analysis.TWPAnalysis.load_model_from_file"]], "matmul_2x2() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.matmul_2x2"]], "matpow_2x2() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.matpow_2x2"]], "model_dump() (twpasolver.basemodel.basemodel method)": [[1, "twpasolver.basemodel.BaseModel.model_dump"]], "model_post_init() (twpasolver.analysis.analyzer method)": [[1, "twpasolver.analysis.Analyzer.model_post_init"]], "model_post_init() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.model_post_init"]], "model_post_init() (twpasolver.frequency.frequencies method)": [[1, "twpasolver.frequency.Frequencies.model_post_init"]], "module": [[1, "module-twpasolver"], [1, "module-twpasolver.analysis"], [1, "module-twpasolver.basemodel"], [1, "module-twpasolver.file_utils"], [1, "module-twpasolver.frequency"], [1, "module-twpasolver.logging"], [1, "module-twpasolver.mathutils"], [1, "module-twpasolver.matrices_arrays"], [1, "module-twpasolver.plotting"], [1, "module-twpasolver.twoport"], [1, "module-twpasolver.typing"], [2, "module-twpasolver.models"], [2, "module-twpasolver.models.compose"], [2, "module-twpasolver.models.modelarray"], [2, "module-twpasolver.models.oneport"], [2, "module-twpasolver.models.rf_functions"], [2, "module-twpasolver.models.transmission_lines"], [2, "module-twpasolver.models.twoportarrays"], [2, "module-twpasolver.models.twpa_cells"]], "name (twpasolver.analysis.executionrequest attribute)": [[1, "twpasolver.analysis.ExecutionRequest.name"]], "omega (twpasolver.frequency.frequencies property)": [[1, "twpasolver.frequency.Frequencies.omega"]], "parameter_sweep() (twpasolver.analysis.analyzer method)": [[1, "twpasolver.analysis.Analyzer.parameter_sweep"]], "phase_matching() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.phase_matching"]], "plot_gain() (in module twpasolver.plotting)": [[1, "twpasolver.plotting.plot_gain"]], "plot_gain() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.plot_gain"]], "plot_phase_matching() (in module twpasolver.plotting)": [[1, "twpasolver.plotting.plot_phase_matching"]], "plot_phase_matching() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.plot_phase_matching"]], "plot_response() (in module twpasolver.plotting)": [[1, "twpasolver.plotting.plot_response"]], "plot_response() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.plot_response"]], "read_file() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.read_file"]], "read_hdf5() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.read_hdf5"]], "read_json() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.read_json"]], "run (twpasolver.analysis.analyzer attribute)": [[1, "twpasolver.analysis.Analyzer.run"]], "s (twpasolver.twoport.twoportcell property)": [[1, "twpasolver.twoport.TwoPortCell.s"]], "s2a() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.s2a"]], "save_data() (twpasolver.analysis.analyzer method)": [[1, "twpasolver.analysis.Analyzer.save_data"]], "save_to_file() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.save_to_file"]], "save_to_hdf5() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.save_to_hdf5"]], "save_to_json() (in module twpasolver.file_utils)": [[1, "twpasolver.file_utils.save_to_json"]], "shape (twpasolver.matrices_arrays.twobytwoarray property)": [[1, "twpasolver.matrices_arrays.TwoByTwoArray.shape"]], "single_abcd() (twpasolver.twoport.twoportmodel method)": [[1, "twpasolver.twoport.TwoPortModel.single_abcd"]], "to_db() (in module twpasolver.mathutils)": [[1, "twpasolver.mathutils.to_dB"]], "to_network() (twpasolver.twoport.twoportcell method)": [[1, "twpasolver.twoport.TwoPortCell.to_network"]], "twpa (twpasolver.analysis.twpanalysis attribute)": [[1, "twpasolver.analysis.TWPAnalysis.twpa"]], "twpasolver": [[1, "module-twpasolver"]], "twpasolver.analysis": [[1, "module-twpasolver.analysis"]], "twpasolver.basemodel": [[1, "module-twpasolver.basemodel"]], "twpasolver.file_utils": [[1, "module-twpasolver.file_utils"]], "twpasolver.frequency": [[1, "module-twpasolver.frequency"]], "twpasolver.logging": [[1, "module-twpasolver.logging"]], "twpasolver.mathutils": [[1, "module-twpasolver.mathutils"]], "twpasolver.matrices_arrays": [[1, "module-twpasolver.matrices_arrays"]], "twpasolver.plotting": [[1, "module-twpasolver.plotting"]], "twpasolver.twoport": [[1, "module-twpasolver.twoport"]], "twpasolver.typing": [[1, "module-twpasolver.typing"]], "unit (twpasolver.frequency.frequencies attribute)": [[1, "twpasolver.frequency.Frequencies.unit"]], "unit_multiplier (twpasolver.frequency.frequencies property)": [[1, "twpasolver.frequency.Frequencies.unit_multiplier"]], "update() (twpasolver.twoport.twoportmodel method)": [[1, "twpasolver.twoport.TwoPortModel.update"]], "update_base_data() (twpasolver.analysis.analyzer method)": [[1, "twpasolver.analysis.Analyzer.update_base_data"]], "update_base_data() (twpasolver.analysis.twpanalysis method)": [[1, "twpasolver.analysis.TWPAnalysis.update_base_data"]], "validate_impedance() (in module twpasolver.typing)": [[1, "twpasolver.typing.validate_impedance"]], "c (twpasolver.models.oneport.capacitance attribute)": [[2, "twpasolver.models.oneport.Capacitance.C"]], "c (twpasolver.models.oneport.stub attribute)": [[2, "twpasolver.models.oneport.Stub.C"]], "c (twpasolver.models.transmission_lines.losslesstl attribute)": [[2, "twpasolver.models.transmission_lines.LosslessTL.C"]], "c (twpasolver.models.twpa_cells.lclfbasecell attribute)": [[2, "twpasolver.models.twpa_cells.LCLfBaseCell.C"]], "c (twpasolver.models.twpa_cells.stubbasecell attribute)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.C"]], "idc (twpasolver.models.twoportarrays.twpa attribute)": [[2, "twpasolver.models.twoportarrays.TWPA.Idc"]], "ip0 (twpasolver.models.twoportarrays.twpa attribute)": [[2, "twpasolver.models.twoportarrays.TWPA.Ip0"]], "iratio (twpasolver.models.twoportarrays.twpa property)": [[2, "twpasolver.models.twoportarrays.TWPA.Iratio"]], "istar (twpasolver.models.twoportarrays.twpa attribute)": [[2, "twpasolver.models.twoportarrays.TWPA.Istar"]], "l (twpasolver.models.oneport.inductance attribute)": [[2, "twpasolver.models.oneport.Inductance.L"]], "l (twpasolver.models.oneport.stub attribute)": [[2, "twpasolver.models.oneport.Stub.L"]], "l (twpasolver.models.transmission_lines.losslesstl attribute)": [[2, "twpasolver.models.transmission_lines.LosslessTL.L"], [2, "twpasolver.models.transmission_lines.LosslessTL.l"]], "l (twpasolver.models.twpa_cells.lclfbasecell attribute)": [[2, "twpasolver.models.twpa_cells.LCLfBaseCell.L"]], "l (twpasolver.models.twpa_cells.stubbasecell attribute)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.L"]], "lclf_abcd() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.LCLf_abcd"]], "lf (twpasolver.models.twpa_cells.lclfbasecell attribute)": [[2, "twpasolver.models.twpa_cells.LCLfBaseCell.Lf"]], "lf (twpasolver.models.twpa_cells.stubbasecell attribute)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.Lf"]], "n_tot (twpasolver.models.twoportarrays.twpa property)": [[2, "twpasolver.models.twoportarrays.TWPA.N_tot"]], "r (twpasolver.models.oneport.resistance attribute)": [[2, "twpasolver.models.oneport.Resistance.R"]], "y() (twpasolver.models.oneport.oneportmodel method)": [[2, "twpasolver.models.oneport.OnePortModel.Y"]], "z() (twpasolver.models.oneport.capacitance method)": [[2, "twpasolver.models.oneport.Capacitance.Z"]], "z() (twpasolver.models.oneport.inductance method)": [[2, "twpasolver.models.oneport.Inductance.Z"]], "z() (twpasolver.models.oneport.oneportarray method)": [[2, "twpasolver.models.oneport.OnePortArray.Z"]], "z() (twpasolver.models.oneport.oneportmodel method)": [[2, "twpasolver.models.oneport.OnePortModel.Z"]], "z() (twpasolver.models.oneport.resistance method)": [[2, "twpasolver.models.oneport.Resistance.Z"]], "z() (twpasolver.models.oneport.stub method)": [[2, "twpasolver.models.oneport.Stub.Z"]], "z0 (twpasolver.models.transmission_lines.losslesstl property)": [[2, "twpasolver.models.transmission_lines.LosslessTL.Z0"]], "alpha (twpasolver.models.twoportarrays.twpa property)": [[2, "twpasolver.models.twoportarrays.TWPA.alpha"]], "append() (twpasolver.models.modelarray.modelarray method)": [[2, "twpasolver.models.modelarray.ModelArray.append"]], "capacitance() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.capacitance"]], "cells (twpasolver.models.modelarray.modelarray attribute)": [[2, "twpasolver.models.modelarray.ModelArray.cells"]], "cells (twpasolver.models.oneport.oneportarray attribute)": [[2, "twpasolver.models.oneport.OnePortArray.cells"]], "cells (twpasolver.models.twoportarrays.twoportarray attribute)": [[2, "twpasolver.models.twoportarrays.TwoPortArray.cells"]], "centered (twpasolver.models.twpa_cells.lclfbasecell attribute)": [[2, "twpasolver.models.twpa_cells.LCLfBaseCell.centered"]], "chi (twpasolver.models.twoportarrays.twpa property)": [[2, "twpasolver.models.twoportarrays.TWPA.chi"]], "compose() (in module twpasolver.models.compose)": [[2, "twpasolver.models.compose.compose"]], "epsilon (twpasolver.models.twoportarrays.twpa property)": [[2, "twpasolver.models.twoportarrays.TWPA.epsilon"]], "from_z_vp() (twpasolver.models.transmission_lines.losslesstl class method)": [[2, "twpasolver.models.transmission_lines.LosslessTL.from_z_vp"]], "get_stub_cell() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.get_stub_cell"]], "inductance() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.inductance"]], "l1 (twpasolver.models.twpa_cells.stubbasecell attribute)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.l1"]], "l2 (twpasolver.models.twpa_cells.stubbasecell attribute)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.l2"]], "length (twpasolver.models.oneport.stub attribute)": [[2, "twpasolver.models.oneport.Stub.length"]], "line (twpasolver.models.twpa_cells.stubbasecell attribute)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.line"]], "lossless_line_abcd() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.lossless_line_abcd"]], "name (twpasolver.models.oneport.capacitance attribute)": [[2, "twpasolver.models.oneport.Capacitance.name"]], "name (twpasolver.models.oneport.inductance attribute)": [[2, "twpasolver.models.oneport.Inductance.name"]], "name (twpasolver.models.oneport.oneportarray attribute)": [[2, "twpasolver.models.oneport.OnePortArray.name"]], "name (twpasolver.models.oneport.resistance attribute)": [[2, "twpasolver.models.oneport.Resistance.name"]], "name (twpasolver.models.oneport.stub attribute)": [[2, "twpasolver.models.oneport.Stub.name"]], "name (twpasolver.models.transmission_lines.losslesstl attribute)": [[2, "twpasolver.models.transmission_lines.LosslessTL.name"]], "name (twpasolver.models.twoportarrays.twpa attribute)": [[2, "twpasolver.models.twoportarrays.TWPA.name"]], "name (twpasolver.models.twoportarrays.twoportarray attribute)": [[2, "twpasolver.models.twoportarrays.TwoPortArray.name"]], "name (twpasolver.models.twpa_cells.lclfbasecell attribute)": [[2, "twpasolver.models.twpa_cells.LCLfBaseCell.name"]], "name (twpasolver.models.twpa_cells.stubbasecell attribute)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.name"]], "open (twpasolver.models.oneport.stub attribute)": [[2, "twpasolver.models.oneport.Stub.open"]], "parallel (twpasolver.models.oneport.oneportarray attribute)": [[2, "twpasolver.models.oneport.OnePortArray.parallel"]], "parallel_admittance_abcd() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.parallel_admittance_abcd"]], "series_impedance_abcd() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.series_impedance_abcd"]], "single_abcd() (twpasolver.models.oneport.oneportmodel method)": [[2, "twpasolver.models.oneport.OnePortModel.single_abcd"]], "single_abcd() (twpasolver.models.transmission_lines.losslesstl method)": [[2, "twpasolver.models.transmission_lines.LosslessTL.single_abcd"]], "single_abcd() (twpasolver.models.twoportarrays.twoportarray method)": [[2, "twpasolver.models.twoportarrays.TwoPortArray.single_abcd"]], "single_abcd() (twpasolver.models.twpa_cells.lclfbasecell method)": [[2, "twpasolver.models.twpa_cells.LCLfBaseCell.single_abcd"]], "single_abcd() (twpasolver.models.twpa_cells.stubbasecell method)": [[2, "twpasolver.models.twpa_cells.StubBaseCell.single_abcd"]], "stub() (in module twpasolver.models.rf_functions)": [[2, "twpasolver.models.rf_functions.stub"]], "twoport_parallel (twpasolver.models.oneport.oneportmodel attribute)": [[2, "twpasolver.models.oneport.OnePortModel.twoport_parallel"]], "twpasolver.models": [[2, "module-twpasolver.models"]], "twpasolver.models.compose": [[2, "module-twpasolver.models.compose"]], "twpasolver.models.modelarray": [[2, "module-twpasolver.models.modelarray"]], "twpasolver.models.oneport": [[2, "module-twpasolver.models.oneport"]], "twpasolver.models.rf_functions": [[2, "module-twpasolver.models.rf_functions"]], "twpasolver.models.transmission_lines": [[2, "module-twpasolver.models.transmission_lines"]], "twpasolver.models.twoportarrays": [[2, "module-twpasolver.models.twoportarrays"]], "twpasolver.models.twpa_cells": [[2, "module-twpasolver.models.twpa_cells"]], "validate_nested_cells() (twpasolver.models.modelarray.modelarray class method)": [[2, "twpasolver.models.modelarray.ModelArray.validate_nested_cells"]], "vp (twpasolver.models.transmission_lines.losslesstl property)": [[2, "twpasolver.models.transmission_lines.LosslessTL.vp"]], "xi (twpasolver.models.twoportarrays.twpa property)": [[2, "twpasolver.models.twoportarrays.TWPA.xi"]]}})